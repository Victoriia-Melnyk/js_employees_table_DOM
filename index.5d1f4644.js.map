{"mappings":"A,S,E,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,CCEA,SAAS,EAAqB,CAAK,EAGjC,IAAK,IAFD,EAAS,GAEJ,EAAI,EAAG,EAAI,EAAM,MAAM,CAAE,IACf,MAAb,CAAK,CAAC,EAAE,EAAY,AAAa,MAAb,CAAK,CAAC,EAAE,EAC9B,CAAA,GAAU,CAAK,CAAC,EAAE,AAAF,EAIpB,OAAO,CACT,CAEA,I,EAAM,EAAmB,SAAC,CAAA,CAAO,CAAA,CAAa,CAA9C,EACE,IAAM,EAAM,SAAS,aAAa,CAAC,MAEnC,CAAA,EAAI,SAAS,CAAG,eAChB,EAAI,YAAY,CAAC,UAAW,gBAC5B,EAAI,SAAS,CAAC,GAAG,CAAC,GAElB,IAAM,EAAK,SAAS,aAAa,CAAC,MAC5B,EAAI,SAAS,aAAa,CAAC,IAEjC,CAAA,EAAG,WAAW,CAAG,EACjB,EAAG,SAAS,CAAG,QACf,EAAE,WAAW,CAAG,EAEhB,EAAI,MAAM,CAAC,GACX,EAAI,MAAM,CAAC,GACX,SAAS,eAAe,CAAC,MAAM,CAAC,GAEhC,WAAW,WACT,EAAI,KAAK,CAAC,OAAO,CAAG,MACtB,EAAG,IACL,EAWM,EAAO,SAAS,aAAa,CAAC,QAG9B,EAAc,AADN,SAAS,aAAa,CAAC,SACX,gBAAgB,CAAC,YACrC,EAAQ,SAAS,aAAa,CAAC,SAC/B,E,A,S,C,E,G,M,O,C,G,O,E,E,E,EAAe,EAAM,IAAI,G,A,S,C,E,G,A,a,O,Q,A,M,C,C,O,Q,C,E,A,M,C,C,a,C,O,M,I,C,E,E,I,A,S,C,C,C,E,G,G,G,A,U,O,E,O,E,E,K,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,E,K,G,E,I,A,W,M,A,U,wI,IAG/B,EAAY,OAAO,CAAC,SAAC,CAAA,CAAQ,CAA7B,EACE,EAAO,gBAAgB,CAAC,QAAS,WAC/B,IAAM,EAAQ,EAAO,YAAY,CAAC,SAElC,EAAS,IAAI,CAAC,SAAC,CAAA,CAAM,CAArB,EACE,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","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nfunction removeDollarAndComma(value) {\n    var result = \"\";\n    for(var i = 0; i < value.length; i++)if (value[i] !== \"$\" && value[i] !== \",\") result += value[i];\n    return result;\n}\nvar pushNotification = function(title, description, type) {\n    var div = document.createElement(\"div\");\n    div.className = \"notification\";\n    div.setAttribute(\"data-qa\", \"notification\");\n    div.classList.add(type);\n    var h2 = document.createElement(\"h2\");\n    var p = document.createElement(\"p\");\n    h2.textContent = title;\n    h2.className = \"title\";\n    p.textContent = description;\n    div.append(h2);\n    div.append(p);\n    document.documentElement.append(div);\n    setTimeout(function() {\n        div.style.display = \"none\";\n    }, 2000);\n};\nvar selectOptions = [\n    \"Tokyo\",\n    \"Singapore\",\n    \"London\",\n    \"New York\",\n    \"Edinburgh\",\n    \"San Francisco\"\n];\nvar body = document.querySelector(\"body\");\nvar table = document.querySelector(\"table\");\nvar headerCells = table.querySelectorAll(\"thead th\");\nvar tbody = document.querySelector(\"tbody\");\nvar bodyRows = _to_consumable_array(tbody.rows);\n// implementing sorting\nheaderCells.forEach(function(header, index) {\n    header.addEventListener(\"click\", function() {\n        var order = header.getAttribute(\"order\");\n        bodyRows.sort(function(rowA, rowB) {\n            var cellA = rowA.children[index].textContent.trim();\n            var cellB = rowB.children[index].textContent.trim();\n            var comparison = 0;\n            // Check if the column is the salary column\n            if (index === 4) {\n                var salaryA = parseFloat(removeDollarAndComma(cellA));\n                var salaryB = parseFloat(removeDollarAndComma(cellB));\n                comparison = salaryA - salaryB;\n            } else if (!isNaN(cellA) && !isNaN(cellB)) comparison = cellA - cellB;\n            else comparison = cellA.localeCompare(cellB);\n            if (order === \"asc\") return -comparison;\n            else return comparison;\n        });\n        // Toggle the order attribute\n        headerCells.forEach(function(cell) {\n            return cell.removeAttribute(\"order\");\n        });\n        header.setAttribute(\"order\", order === \"asc\" ? \"dsc\" : \"asc\");\n        // Reattach the sorted rows\n        bodyRows.forEach(function(row) {\n            return tbody.appendChild(row);\n        });\n    });\n});\n// implementing row selecting\nbodyRows.forEach(function(row) {\n    row.addEventListener(\"click\", function() {\n        if (row.classList.contains(\"active\")) bodyRows.forEach(function(item) {\n            item.classList.remove(\"active\");\n        });\n        else {\n            bodyRows.forEach(function(item) {\n                item.classList.remove(\"active\");\n            });\n            row.classList.add(\"active\");\n        }\n    });\n});\n// implementing form adding\nvar form = document.createElement(\"form\");\nform.classList.add(\"new-employee-form\");\n// Create a label elements\nvar labelName = document.createElement(\"label\");\nlabelName.textContent = \"Name: \";\nvar labelPosition = document.createElement(\"label\");\nlabelPosition.textContent = \"Position: \";\nvar labelOffice = document.createElement(\"label\");\nlabelOffice.textContent = \"Office: \";\nvar labelAge = document.createElement(\"label\");\nlabelAge.textContent = \"Age: \";\nvar labelSalary = document.createElement(\"label\");\nlabelSalary.textContent = \"Salary: \";\n// create inputs\nvar inputName = document.createElement(\"input\");\ninputName.setAttribute(\"name\", \"name\");\ninputName.setAttribute(\"type\", \"text\");\ninputName.setAttribute(\"data-qa\", \"name\");\nvar inputPosition = document.createElement(\"input\");\ninputPosition.setAttribute(\"name\", \"position\");\ninputPosition.setAttribute(\"type\", \"text\");\ninputPosition.setAttribute(\"data-qa\", \"position\");\nvar select = document.createElement(\"select\");\nselect.setAttribute(\"data-qa\", \"office\");\nselectOptions.forEach(function(optionName) {\n    var option = document.createElement(\"option\");\n    option.textContent = optionName;\n    option.setAttribute(\"value\", optionName.toLowerCase());\n    select.appendChild(option);\n});\nvar inputAge = document.createElement(\"input\");\ninputAge.setAttribute(\"name\", \"age\");\ninputAge.setAttribute(\"type\", \"number\");\ninputAge.setAttribute(\"data-qa\", \"age\");\nvar inputSalary = document.createElement(\"input\");\ninputSalary.setAttribute(\"name\", \"salary\");\ninputSalary.setAttribute(\"type\", \"number\");\ninputSalary.setAttribute(\"data-qa\", \"salary\");\n// Append the input to the label\nlabelName.appendChild(inputName);\nlabelPosition.appendChild(inputPosition);\nlabelOffice.appendChild(select);\nlabelAge.appendChild(inputAge);\nlabelSalary.appendChild(inputSalary);\n// create button\nvar button = document.createElement(\"button\");\nbutton.setAttribute(\"type\", \"submit\");\nbutton.textContent = \"Save to table\";\n// Append the label to the form\nform.appendChild(labelName);\nform.appendChild(labelPosition);\nform.appendChild(labelOffice);\nform.appendChild(labelAge);\nform.appendChild(labelSalary);\nform.appendChild(button);\nbody.append(form);\n// Add submit event listener to the form\nform.addEventListener(\"submit\", function(e) {\n    e.preventDefault();\n    if (inputName.value.length < 4 || inputPosition.value.length < 4) pushNotification(\"Oooops\", \"Name is too short. Should have at least 4 characters\", \"error\");\n    else if (inputAge.value < 18 || inputAge.value > 80) pushNotification(\"Oooops\", \"Your age is not permitted\", \"error\");\n    else {\n        var newRow = document.createElement(\"tr\");\n        var nameCell = document.createElement(\"td\");\n        nameCell.textContent = inputName.value;\n        var positionCell = document.createElement(\"td\");\n        positionCell.textContent = inputPosition.value;\n        var officeCell = document.createElement(\"td\");\n        officeCell.textContent = select.options[select.selectedIndex].text;\n        var ageCell = document.createElement(\"td\");\n        ageCell.textContent = inputAge.value;\n        var salaryCell = document.createElement(\"td\");\n        var formattedSalary = new Intl.NumberFormat(\"en-US\", {\n            style: \"currency\",\n            currency: \"USD\",\n            minimumFractionDigits: 0\n        }).format(inputSalary.value);\n        salaryCell.textContent = formattedSalary;\n        newRow.appendChild(nameCell);\n        newRow.appendChild(positionCell);\n        newRow.appendChild(officeCell);\n        newRow.appendChild(ageCell);\n        newRow.appendChild(salaryCell);\n        tbody.appendChild(newRow);\n        // Clear the form inputs\n        inputName.value = \"\";\n        inputPosition.value = \"\";\n        select.selectedIndex = 0;\n        inputAge.value = \"\";\n        inputSalary.value = \"\";\n        pushNotification(\"Bravo!\", \"Employee successfully added\", \"success\");\n    }\n});\n\n//# sourceMappingURL=index.5d1f4644.js.map\n","'use strict';\n\nfunction removeDollarAndComma(value) {\n  let result = '';\n\n  for (let i = 0; i < value.length; i++) {\n    if (value[i] !== '$' && value[i] !== ',') {\n      result += value[i];\n    }\n  }\n\n  return result;\n}\n\nconst pushNotification = (title, description, type) => {\n  const div = document.createElement('div');\n\n  div.className = 'notification';\n  div.setAttribute('data-qa', 'notification');\n  div.classList.add(type);\n\n  const h2 = document.createElement('h2');\n  const p = document.createElement('p');\n\n  h2.textContent = title;\n  h2.className = 'title';\n  p.textContent = description;\n\n  div.append(h2);\n  div.append(p);\n  document.documentElement.append(div);\n\n  setTimeout(() => {\n    div.style.display = 'none';\n  }, 2000);\n};\n\nconst selectOptions = [\n  'Tokyo',\n  'Singapore',\n  'London',\n  'New York',\n  'Edinburgh',\n  'San Francisco',\n];\n\nconst body = document.querySelector('body');\n\nconst table = document.querySelector('table');\nconst headerCells = table.querySelectorAll('thead th');\nconst tbody = document.querySelector('tbody');\nconst bodyRows = [...tbody.rows];\n\n// implementing sorting\nheaderCells.forEach((header, index) => {\n  header.addEventListener('click', () => {\n    const order = header.getAttribute('order');\n\n    bodyRows.sort((rowA, rowB) => {\n      const cellA = rowA.children[index].textContent.trim();\n      const cellB = rowB.children[index].textContent.trim();\n\n      let comparison = 0;\n\n      // Check if the column is the salary column\n      if (index === 4) {\n        const salaryA = parseFloat(removeDollarAndComma(cellA));\n        const salaryB = parseFloat(removeDollarAndComma(cellB));\n\n        comparison = salaryA - salaryB;\n      } else if (!isNaN(cellA) && !isNaN(cellB)) {\n        comparison = cellA - cellB;\n      } else {\n        comparison = cellA.localeCompare(cellB);\n      }\n\n      if (order === 'asc') {\n        return -comparison;\n      } else {\n        return comparison;\n      }\n    });\n\n    // Toggle the order attribute\n    headerCells.forEach((cell) => cell.removeAttribute('order'));\n    header.setAttribute('order', order === 'asc' ? 'dsc' : 'asc');\n\n    // Reattach the sorted rows\n    bodyRows.forEach((row) => tbody.appendChild(row));\n  });\n});\n\n// implementing row selecting\nbodyRows.forEach((row) => {\n  row.addEventListener('click', () => {\n    if (row.classList.contains('active')) {\n      bodyRows.forEach((item) => {\n        item.classList.remove('active');\n      });\n    } else {\n      bodyRows.forEach((item) => {\n        item.classList.remove('active');\n      });\n      row.classList.add('active');\n    }\n  });\n});\n\n// implementing form adding\nconst form = document.createElement('form');\n\nform.classList.add('new-employee-form');\n\n// Create a label elements\nconst labelName = document.createElement('label');\n\nlabelName.textContent = 'Name: ';\n\nconst labelPosition = document.createElement('label');\n\nlabelPosition.textContent = 'Position: ';\n\nconst labelOffice = document.createElement('label');\n\nlabelOffice.textContent = 'Office: ';\n\nconst labelAge = document.createElement('label');\n\nlabelAge.textContent = 'Age: ';\n\nconst labelSalary = document.createElement('label');\n\nlabelSalary.textContent = 'Salary: ';\n\n// create inputs\nconst inputName = document.createElement('input');\n\ninputName.setAttribute('name', 'name');\ninputName.setAttribute('type', 'text');\ninputName.setAttribute('data-qa', 'name');\n\nconst inputPosition = document.createElement('input');\n\ninputPosition.setAttribute('name', 'position');\ninputPosition.setAttribute('type', 'text');\ninputPosition.setAttribute('data-qa', 'position');\n\nconst select = document.createElement('select');\n\nselect.setAttribute('data-qa', 'office');\n\nselectOptions.forEach((optionName) => {\n  const option = document.createElement('option');\n\n  option.textContent = optionName;\n  option.setAttribute('value', optionName.toLowerCase());\n  select.appendChild(option);\n});\n\nconst inputAge = document.createElement('input');\n\ninputAge.setAttribute('name', 'age');\ninputAge.setAttribute('type', 'number');\ninputAge.setAttribute('data-qa', 'age');\n\nconst inputSalary = document.createElement('input');\n\ninputSalary.setAttribute('name', 'salary');\ninputSalary.setAttribute('type', 'number');\ninputSalary.setAttribute('data-qa', 'salary');\n\n// Append the input to the label\nlabelName.appendChild(inputName);\nlabelPosition.appendChild(inputPosition);\nlabelOffice.appendChild(select);\nlabelAge.appendChild(inputAge);\nlabelSalary.appendChild(inputSalary);\n\n// create button\nconst button = document.createElement('button');\n\nbutton.setAttribute('type', 'submit');\nbutton.textContent = 'Save to table';\n\n// Append the label to the form\nform.appendChild(labelName);\nform.appendChild(labelPosition);\nform.appendChild(labelOffice);\nform.appendChild(labelAge);\nform.appendChild(labelSalary);\nform.appendChild(button);\n\nbody.append(form);\n\n// Add submit event listener to the form\nform.addEventListener('submit', (e) => {\n  e.preventDefault();\n\n  if (inputName.value.length < 4 || inputPosition.value.length < 4) {\n    pushNotification(\n      'Oooops',\n      'Name is too short. Should have at least 4 characters',\n      'error',\n    );\n  } else if (inputAge.value < 18 || inputAge.value > 80) {\n    pushNotification('Oooops', 'Your age is not permitted', 'error');\n  } else {\n    const newRow = document.createElement('tr');\n\n    const nameCell = document.createElement('td');\n\n    nameCell.textContent = inputName.value;\n\n    const positionCell = document.createElement('td');\n\n    positionCell.textContent = inputPosition.value;\n\n    const officeCell = document.createElement('td');\n\n    officeCell.textContent = select.options[select.selectedIndex].text;\n\n    const ageCell = document.createElement('td');\n\n    ageCell.textContent = inputAge.value;\n\n    const salaryCell = document.createElement('td');\n    const formattedSalary = new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD',\n      minimumFractionDigits: 0,\n    }).format(inputSalary.value);\n\n    salaryCell.textContent = formattedSalary;\n\n    newRow.appendChild(nameCell);\n    newRow.appendChild(positionCell);\n    newRow.appendChild(officeCell);\n    newRow.appendChild(ageCell);\n    newRow.appendChild(salaryCell);\n\n    tbody.appendChild(newRow);\n\n    // Clear the form inputs\n    inputName.value = '';\n    inputPosition.value = '';\n    select.selectedIndex = 0;\n    inputAge.value = '';\n    inputSalary.value = '';\n\n    pushNotification('Bravo!', 'Employee successfully added', 'success');\n  }\n});\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","removeDollarAndComma","value","result","pushNotification","title","description","type","div","document","createElement","className","setAttribute","classList","add","h2","p","textContent","append","documentElement","setTimeout","style","display","body","querySelector","headerCells","table","querySelectorAll","tbody","bodyRows","_array_without_holes","isArray","rows","_iterable_to_array","iter","Symbol","iterator","from","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","_non_iterable_spread","TypeError","forEach","header","index","addEventListener","order","getAttribute","sort","rowA","rowB","cellA","children","trim","cellB","comparison","salaryA","parseFloat","isNaN","localeCompare","cell","removeAttribute","row","appendChild","contains","item","remove","form","labelName","labelPosition","labelOffice","labelAge","labelSalary","inputName","inputPosition","select","selectOptions","optionName","option","toLowerCase","inputAge","inputSalary","button","e","preventDefault","newRow","nameCell","positionCell","officeCell","options","selectedIndex","text","ageCell","salaryCell","formattedSalary","Intl","NumberFormat","currency","minimumFractionDigits","format"],"version":3,"file":"index.5d1f4644.js.map"}