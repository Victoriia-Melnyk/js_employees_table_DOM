{"mappings":"AAAA;AAEA,SAAS,qBAAqB,KAAK;IACjC,IAAI,SAAS;IAEb,IAAK,IAAI,IAAI,GAAG,IAAI,MAAM,MAAM,EAAE,IAChC,IAAI,KAAK,CAAC,EAAE,KAAK,OAAO,KAAK,CAAC,EAAE,KAAK,KACnC,UAAU,KAAK,CAAC,EAAE;IAItB,OAAO;AACT;AAEA,MAAM,mBAAmB,CAAC,OAAO,aAAa;IAC5C,MAAM,MAAM,SAAS,aAAa,CAAC;IAEnC,IAAI,SAAS,GAAG;IAChB,IAAI,YAAY,CAAC,WAAW;IAC5B,IAAI,SAAS,CAAC,GAAG,CAAC;IAElB,MAAM,KAAK,SAAS,aAAa,CAAC;IAClC,MAAM,IAAI,SAAS,aAAa,CAAC;IAEjC,GAAG,WAAW,GAAG;IACjB,GAAG,SAAS,GAAG;IACf,EAAE,WAAW,GAAG;IAEhB,IAAI,MAAM,CAAC;IACX,IAAI,MAAM,CAAC;IACX,SAAS,eAAe,CAAC,MAAM,CAAC;IAEhC,WAAW;QACT,IAAI,KAAK,CAAC,OAAO,GAAG;IACtB,GAAG;AACL;AAEA,MAAM,gBAAgB;IACpB;IACA;IACA;IACA;IACA;IACA;CACD;AAED,MAAM,OAAO,SAAS,aAAa,CAAC;AAEpC,MAAM,QAAQ,SAAS,aAAa,CAAC;AACrC,MAAM,cAAc,MAAM,gBAAgB,CAAC;AAC3C,MAAM,QAAQ,SAAS,aAAa,CAAC;AACrC,MAAM,WAAW;OAAI,MAAM,IAAI;CAAC;AAEhC,uBAAuB;AACvB,YAAY,OAAO,CAAC,CAAC,QAAQ;IAC3B,OAAO,gBAAgB,CAAC,SAAS;QAC/B,MAAM,QAAQ,OAAO,YAAY,CAAC;QAElC,SAAS,IAAI,CAAC,CAAC,MAAM;YACnB,MAAM,QAAQ,KAAK,QAAQ,CAAC,MAAM,CAAC,WAAW,CAAC,IAAI;YACnD,MAAM,QAAQ,KAAK,QAAQ,CAAC,MAAM,CAAC,WAAW,CAAC,IAAI;YAEnD,IAAI,aAAa;YAEjB,2CAA2C;YAC3C,IAAI,UAAU,GAAG;gBACf,MAAM,UAAU,WAAW,qBAAqB;gBAChD,MAAM,UAAU,WAAW,qBAAqB;gBAEhD,aAAa,UAAU;YACzB,OAAO,IAAI,CAAC,MAAM,UAAU,CAAC,MAAM,QACjC,aAAa,QAAQ;iBAErB,aAAa,MAAM,aAAa,CAAC;YAGnC,IAAI,UAAU,OACZ,OAAO,CAAC;iBAER,OAAO;QAEX;QAEA,6BAA6B;QAC7B,YAAY,OAAO,CAAC,CAAC,OAAS,KAAK,eAAe,CAAC;QACnD,OAAO,YAAY,CAAC,SAAS,UAAU,QAAQ,QAAQ;QAEvD,2BAA2B;QAC3B,SAAS,OAAO,CAAC,CAAC,MAAQ,MAAM,WAAW,CAAC;IAC9C;AACF;AAEA,6BAA6B;AAC7B,SAAS,OAAO,CAAC,CAAC;IAChB,IAAI,gBAAgB,CAAC,SAAS;QAC5B,IAAI,IAAI,SAAS,CAAC,QAAQ,CAAC,WACzB,SAAS,OAAO,CAAC,CAAC;YAChB,KAAK,SAAS,CAAC,MAAM,CAAC;QACxB;aACK;YACL,SAAS,OAAO,CAAC,CAAC;gBAChB,KAAK,SAAS,CAAC,MAAM,CAAC;YACxB;YACA,IAAI,SAAS,CAAC,GAAG,CAAC;QACpB;IACF;AACF;AAEA,2BAA2B;AAC3B,MAAM,OAAO,SAAS,aAAa,CAAC;AAEpC,KAAK,SAAS,CAAC,GAAG,CAAC;AAEnB,0BAA0B;AAC1B,MAAM,YAAY,SAAS,aAAa,CAAC;AAEzC,UAAU,WAAW,GAAG;AAExB,MAAM,gBAAgB,SAAS,aAAa,CAAC;AAE7C,cAAc,WAAW,GAAG;AAE5B,MAAM,cAAc,SAAS,aAAa,CAAC;AAE3C,YAAY,WAAW,GAAG;AAE1B,MAAM,WAAW,SAAS,aAAa,CAAC;AAExC,SAAS,WAAW,GAAG;AAEvB,MAAM,cAAc,SAAS,aAAa,CAAC;AAE3C,YAAY,WAAW,GAAG;AAE1B,gBAAgB;AAChB,MAAM,YAAY,SAAS,aAAa,CAAC;AAEzC,UAAU,YAAY,CAAC,QAAQ;AAC/B,UAAU,YAAY,CAAC,QAAQ;AAC/B,UAAU,YAAY,CAAC,WAAW;AAElC,MAAM,gBAAgB,SAAS,aAAa,CAAC;AAE7C,cAAc,YAAY,CAAC,QAAQ;AACnC,cAAc,YAAY,CAAC,QAAQ;AACnC,cAAc,YAAY,CAAC,WAAW;AAEtC,MAAM,SAAS,SAAS,aAAa,CAAC;AAEtC,OAAO,YAAY,CAAC,WAAW;AAE/B,cAAc,OAAO,CAAC,CAAC;IACrB,MAAM,SAAS,SAAS,aAAa,CAAC;IAEtC,OAAO,WAAW,GAAG;IACrB,OAAO,YAAY,CAAC,SAAS,WAAW,WAAW;IACnD,OAAO,WAAW,CAAC;AACrB;AAEA,MAAM,WAAW,SAAS,aAAa,CAAC;AAExC,SAAS,YAAY,CAAC,QAAQ;AAC9B,SAAS,YAAY,CAAC,QAAQ;AAC9B,SAAS,YAAY,CAAC,WAAW;AAEjC,MAAM,cAAc,SAAS,aAAa,CAAC;AAE3C,YAAY,YAAY,CAAC,QAAQ;AACjC,YAAY,YAAY,CAAC,QAAQ;AACjC,YAAY,YAAY,CAAC,WAAW;AAEpC,gCAAgC;AAChC,UAAU,WAAW,CAAC;AACtB,cAAc,WAAW,CAAC;AAC1B,YAAY,WAAW,CAAC;AACxB,SAAS,WAAW,CAAC;AACrB,YAAY,WAAW,CAAC;AAExB,gBAAgB;AAChB,MAAM,SAAS,SAAS,aAAa,CAAC;AAEtC,OAAO,YAAY,CAAC,QAAQ;AAC5B,OAAO,WAAW,GAAG;AAErB,+BAA+B;AAC/B,KAAK,WAAW,CAAC;AACjB,KAAK,WAAW,CAAC;AACjB,KAAK,WAAW,CAAC;AACjB,KAAK,WAAW,CAAC;AACjB,KAAK,WAAW,CAAC;AACjB,KAAK,WAAW,CAAC;AAEjB,KAAK,MAAM,CAAC;AAEZ,wCAAwC;AACxC,KAAK,gBAAgB,CAAC,UAAU,CAAC;IAC/B,EAAE,cAAc;IAEhB,IAAI,UAAU,KAAK,CAAC,MAAM,GAAG,KAAK,cAAc,KAAK,CAAC,MAAM,GAAG,GAC7D,iBACE,UACA,wDACA;SAEG,IAAI,SAAS,KAAK,GAAG,MAAM,SAAS,KAAK,GAAG,IACjD,iBAAiB,UAAU,6BAA6B;SACnD;QACL,MAAM,SAAS,SAAS,aAAa,CAAC;QAEtC,MAAM,WAAW,SAAS,aAAa,CAAC;QAExC,SAAS,WAAW,GAAG,UAAU,KAAK;QAEtC,MAAM,eAAe,SAAS,aAAa,CAAC;QAE5C,aAAa,WAAW,GAAG,cAAc,KAAK;QAE9C,MAAM,aAAa,SAAS,aAAa,CAAC;QAE1C,WAAW,WAAW,GAAG,OAAO,OAAO,CAAC,OAAO,aAAa,CAAC,CAAC,IAAI;QAElE,MAAM,UAAU,SAAS,aAAa,CAAC;QAEvC,QAAQ,WAAW,GAAG,SAAS,KAAK;QAEpC,MAAM,aAAa,SAAS,aAAa,CAAC;QAC1C,MAAM,kBAAkB,IAAI,KAAK,YAAY,CAAC,SAAS;YACrD,OAAO;YACP,UAAU;YACV,uBAAuB;QACzB,GAAG,MAAM,CAAC,YAAY,KAAK;QAE3B,WAAW,WAAW,GAAG;QAEzB,OAAO,WAAW,CAAC;QACnB,OAAO,WAAW,CAAC;QACnB,OAAO,WAAW,CAAC;QACnB,OAAO,WAAW,CAAC;QACnB,OAAO,WAAW,CAAC;QAEnB,MAAM,WAAW,CAAC;QAElB,wBAAwB;QACxB,UAAU,KAAK,GAAG;QAClB,cAAc,KAAK,GAAG;QACtB,OAAO,aAAa,GAAG;QACvB,SAAS,KAAK,GAAG;QACjB,YAAY,KAAK,GAAG;QAEpB,iBAAiB,UAAU,+BAA+B;IAC5D;AACF","sources":["src/scripts/main.js"],"sourcesContent":["'use strict';\n\nfunction removeDollarAndComma(value) {\n  let result = '';\n\n  for (let i = 0; i < value.length; i++) {\n    if (value[i] !== '$' && value[i] !== ',') {\n      result += value[i];\n    }\n  }\n\n  return result;\n}\n\nconst pushNotification = (title, description, type) => {\n  const div = document.createElement('div');\n\n  div.className = 'notification';\n  div.setAttribute('data-qa', 'notification');\n  div.classList.add(type);\n\n  const h2 = document.createElement('h2');\n  const p = document.createElement('p');\n\n  h2.textContent = title;\n  h2.className = 'title';\n  p.textContent = description;\n\n  div.append(h2);\n  div.append(p);\n  document.documentElement.append(div);\n\n  setTimeout(() => {\n    div.style.display = 'none';\n  }, 2000);\n};\n\nconst selectOptions = [\n  'Tokyo',\n  'Singapore',\n  'London',\n  'New York',\n  'Edinburgh',\n  'San Francisco',\n];\n\nconst body = document.querySelector('body');\n\nconst table = document.querySelector('table');\nconst headerCells = table.querySelectorAll('thead th');\nconst tbody = document.querySelector('tbody');\nconst bodyRows = [...tbody.rows];\n\n// implementing sorting\nheaderCells.forEach((header, index) => {\n  header.addEventListener('click', () => {\n    const order = header.getAttribute('order');\n\n    bodyRows.sort((rowA, rowB) => {\n      const cellA = rowA.children[index].textContent.trim();\n      const cellB = rowB.children[index].textContent.trim();\n\n      let comparison = 0;\n\n      // Check if the column is the salary column\n      if (index === 4) {\n        const salaryA = parseFloat(removeDollarAndComma(cellA));\n        const salaryB = parseFloat(removeDollarAndComma(cellB));\n\n        comparison = salaryA - salaryB;\n      } else if (!isNaN(cellA) && !isNaN(cellB)) {\n        comparison = cellA - cellB;\n      } else {\n        comparison = cellA.localeCompare(cellB);\n      }\n\n      if (order === 'asc') {\n        return -comparison;\n      } else {\n        return comparison;\n      }\n    });\n\n    // Toggle the order attribute\n    headerCells.forEach((cell) => cell.removeAttribute('order'));\n    header.setAttribute('order', order === 'asc' ? 'dsc' : 'asc');\n\n    // Reattach the sorted rows\n    bodyRows.forEach((row) => tbody.appendChild(row));\n  });\n});\n\n// implementing row selecting\nbodyRows.forEach((row) => {\n  row.addEventListener('click', () => {\n    if (row.classList.contains('active')) {\n      bodyRows.forEach((item) => {\n        item.classList.remove('active');\n      });\n    } else {\n      bodyRows.forEach((item) => {\n        item.classList.remove('active');\n      });\n      row.classList.add('active');\n    }\n  });\n});\n\n// implementing form adding\nconst form = document.createElement('form');\n\nform.classList.add('new-employee-form');\n\n// Create a label elements\nconst labelName = document.createElement('label');\n\nlabelName.textContent = 'Name: ';\n\nconst labelPosition = document.createElement('label');\n\nlabelPosition.textContent = 'Position: ';\n\nconst labelOffice = document.createElement('label');\n\nlabelOffice.textContent = 'Office: ';\n\nconst labelAge = document.createElement('label');\n\nlabelAge.textContent = 'Age: ';\n\nconst labelSalary = document.createElement('label');\n\nlabelSalary.textContent = 'Salary: ';\n\n// create inputs\nconst inputName = document.createElement('input');\n\ninputName.setAttribute('name', 'name');\ninputName.setAttribute('type', 'text');\ninputName.setAttribute('data-qa', 'name');\n\nconst inputPosition = document.createElement('input');\n\ninputPosition.setAttribute('name', 'position');\ninputPosition.setAttribute('type', 'text');\ninputPosition.setAttribute('data-qa', 'position');\n\nconst select = document.createElement('select');\n\nselect.setAttribute('data-qa', 'office');\n\nselectOptions.forEach((optionName) => {\n  const option = document.createElement('option');\n\n  option.textContent = optionName;\n  option.setAttribute('value', optionName.toLowerCase());\n  select.appendChild(option);\n});\n\nconst inputAge = document.createElement('input');\n\ninputAge.setAttribute('name', 'age');\ninputAge.setAttribute('type', 'number');\ninputAge.setAttribute('data-qa', 'age');\n\nconst inputSalary = document.createElement('input');\n\ninputSalary.setAttribute('name', 'salary');\ninputSalary.setAttribute('type', 'number');\ninputSalary.setAttribute('data-qa', 'salary');\n\n// Append the input to the label\nlabelName.appendChild(inputName);\nlabelPosition.appendChild(inputPosition);\nlabelOffice.appendChild(select);\nlabelAge.appendChild(inputAge);\nlabelSalary.appendChild(inputSalary);\n\n// create button\nconst button = document.createElement('button');\n\nbutton.setAttribute('type', 'submit');\nbutton.textContent = 'Save to table';\n\n// Append the label to the form\nform.appendChild(labelName);\nform.appendChild(labelPosition);\nform.appendChild(labelOffice);\nform.appendChild(labelAge);\nform.appendChild(labelSalary);\nform.appendChild(button);\n\nbody.append(form);\n\n// Add submit event listener to the form\nform.addEventListener('submit', (e) => {\n  e.preventDefault();\n\n  if (inputName.value.length < 4 || inputPosition.value.length < 4) {\n    pushNotification(\n      'Oooops',\n      'Name is too short. Should have at least 4 characters',\n      'error',\n    );\n  } else if (inputAge.value < 18 || inputAge.value > 80) {\n    pushNotification('Oooops', 'Your age is not permitted', 'error');\n  } else {\n    const newRow = document.createElement('tr');\n\n    const nameCell = document.createElement('td');\n\n    nameCell.textContent = inputName.value;\n\n    const positionCell = document.createElement('td');\n\n    positionCell.textContent = inputPosition.value;\n\n    const officeCell = document.createElement('td');\n\n    officeCell.textContent = select.options[select.selectedIndex].text;\n\n    const ageCell = document.createElement('td');\n\n    ageCell.textContent = inputAge.value;\n\n    const salaryCell = document.createElement('td');\n    const formattedSalary = new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD',\n      minimumFractionDigits: 0,\n    }).format(inputSalary.value);\n\n    salaryCell.textContent = formattedSalary;\n\n    newRow.appendChild(nameCell);\n    newRow.appendChild(positionCell);\n    newRow.appendChild(officeCell);\n    newRow.appendChild(ageCell);\n    newRow.appendChild(salaryCell);\n\n    tbody.appendChild(newRow);\n\n    // Clear the form inputs\n    inputName.value = '';\n    inputPosition.value = '';\n    select.selectedIndex = 0;\n    inputAge.value = '';\n    inputSalary.value = '';\n\n    pushNotification('Bravo!', 'Employee successfully added', 'success');\n  }\n});\n"],"names":[],"version":3,"file":"index.f75de5e1.js.map","sourceRoot":"/__parcel_source_root/"}